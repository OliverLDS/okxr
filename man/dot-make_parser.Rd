% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/05_utils_parser.R
\name{.make_parser}
\alias{.make_parser}
\title{Create a response parser based on schema and response mode}
\usage{
.make_parser(schema, mode = c("named", "positional"))
}
\arguments{
\item{schema}{A \code{data.frame} describing the structure of OKX response fields.
It must contain the columns:
\describe{
  \item{okx}{Field name in raw JSON response}
  \item{formal}{Human-readable label}
  \item{type}{Expected R data type: one of \code{"time"}, \code{"numeric"}, \code{"integer"}, \code{"string"}, \code{"logical"}}
}}

\item{mode}{Parsing mode, either \code{"named"} (default) or \code{"positional"}.
\code{"named"} accesses response fields by key, while \code{"positional"} uses index.}
}
\value{
A function taking \code{(res, tz)} where:
  \describe{
    \item{\code{res}}{An \code{httr::response} object}
    \item{\code{tz}}{A timezone string used for time conversion}
  }
  and returns a parsed \code{data.frame}, or \code{NULL} if the request failed or empty.
}
\description{
Returns a function that parses an OKX API JSON response into a typed \code{data.frame}
using the specified schema and parsing mode. The parser handles both "named"
(key-based) and "positional" (index-based) formats depending on the endpoint.
}
\details{
- The returned data frame uses column names from \code{okx}, not \code{formal}.
- A variable label mapping is attached as an attribute: \code{attr(df, "var_labels")}.
- Rows are sorted by the first column listed in the \code{okx} field (usually timestamp).
}
\keyword{internal}
