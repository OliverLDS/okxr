str(parsed$data)
data_list <- parsed$data
df <- data.frame(stringsAsFactors = FALSE)
for (i in seq_len(nrow(schema))) {
okx_key  <- schema$okx[i]
col_name <- schema$formal[i]
type     <- schema$type[i]
values <- vapply(data_list, function(row) row[[okx_key]], character(1))
parsed_col <- switch(type,
time    = as.POSIXct(as.numeric(values) / 1000, origin = "1970-01-01", tz = tz),
numeric = suppressWarnings(as.numeric(values)),
integer = suppressWarnings(as.integer(values)),
string  = as.character(values),
values
)
df[[col_name]] <- parsed_col
}
if (add_sys_time) df$ts_sys <- as.POSIXct(Sys.time(), tz = tz)
df <- df[order(df[[schema$formal[1]]]), ]
return(df)
}
stop("Unknown parsing mode")
}
}
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
get_var_label <- function(df, var, default = NA_character_) {
labels <- attr(df, "var_labels")
if (is.null(labels)) return(default)
name <- if (is.character(var)) var else names(df)[var]
labels[[name]] %||% default
}
get_var_label <- function(df, var, default = NA_character_) {
labels <- attr(df, "var_labels")
if (is.null(labels)) return(default)
# Resolve variable name
var_name <- if (is.character(var)) var else names(df)[var]
if (!var_name %in% names(labels)) return(default)
labels[[var_name]]
}
df <- .fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
get_var_label(df, "o")
get_var_label <- function(df, var = NULL, default = NA_character_) {
labels <- attr(df, "var_labels")
if (is.null(labels)) return(default)
if (is.null(var)) {
return(labels)  # Return all labels
}
var_name <- if (is.character(var)) var else names(df)[var]
if (!var_name %in% names(labels)) return(default)
labels[[var_name]]
}
get_var_label(df)
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
df <- .fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
get_var_label(df)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$market_historical_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, tz="Aisa/Hong_Kong", config = config)
.fetchers$market_historical_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, tz="Asia/Hong_Kong", config = config)
query        = function(inst_id, bar, before = NULL, limit = 100L, tz) {
if (is.null(before)) {
query_string <- sprintf("?instId=%s&bar=%s&limit=%d", inst_id, bar, limit)
} else {
before_ms <- as.numeric(as.POSIXct(before, format = "%Y-%m-%d %H:%M:%S", tz = tz)) * 1000
query_string <- sprintf("?instId=%s&bar=%s&after=%.0f&limit=%d", inst_id, bar, before_ms, limit) # NOTE: OKX uses 'after=' to mean 'return data BEFORE this time'
}
return(query_string)
}
query
is.function(query)
.fetchers$market_historical_candles
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, tz="Asia/Hong_Kong", config = config)
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz="Asia/Hong_Kong", config = config)
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
.fetchers$market_history_candles
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
df <- .fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
get_var_label(df)
df <- .fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
get_var_label(df)
df
.fetchers$public_mark_price
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_balance(config = config)
config <- list(
api_key = Sys.getenv("OKX_API_KEY2"),
secret_key = Sys.getenv("OKX_SECRET_KEY2"),
passphrase = Sys.getenv("OKX_PASSPHRASE2")
)
.fetchers$account_balance(config = config)
config <- list(
api_key = Sys.getenv("OKX_API_KEY2"),
secret_key = Sys.getenv("OKX_SECRET_KEY2"),
passphrase = Sys.getenv("OKX_PASSPHRASE2")
)
.fetchers$asset_balances(config = config)
.fetchers$account_balance(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
config <- list(
api_key = Sys.getenv("OKX_demo_API_KEY"),
secret_key = Sys.getenv("OKX_demo_SECRET_KEY"),
passphrase = Sys.getenv("OKX_demo_PASSPHRASE")
)
.fetchers$asset_balances(config = config)
config <- list(
api_key = Sys.getenv("OKX_demo_API_KEY"),
secret_key = Sys.getenv("OKX_demo_SECRET_KEY"),
passphrase = Sys.getenv("OKX_demo_PASSPHRASE")
)
.fetchers$asset_balances(config = config)
config <- XAgent::tool_set_config("okx")
config <- list(
api_key = Sys.getenv("OKX_demo_API_KEY"),
secret_key = Sys.getenv("OKX_demo_SECRET_KEY"),
passphrase = Sys.getenv("OKX_demo_PASSPHRASE")
)
.fetchers$asset_balances(config = config)
config <- XAgent::tool_set_config("okx")
.fetchers$asset_balances(config = config)
.fetchers$asset_deposit_history(config = config)
.fetchers$asset_withdrawal_history(config = config)
.fetchers$account_balance(config = config)
.fetchers$account_positions(config = config)
.fetchers$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.fetchers$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
.fetchers$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
config <- list(
api_key = Sys.getenv("OKX_demo_API_KEY"),
secret_key = Sys.getenv("OKX_demo_SECRET_KEY"),
passphrase = Sys.getenv("OKX_demo_PASSPHRASE")
)
.fetchers$asset_balances(config = config)
.fetchers$account_positions(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
config <- XAgent::tool_set_config("okx")
.fetchers$account_positions_history(config = config)
config <- XAgent::tool_set_config("okx")
.fetchers$account_positions(config = config)
.fetchers$account_balance(config = config)
.fetchers$account_positions_history(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_positions_history(config = config)
config <- list(
api_key = Sys.getenv("OKX_API_KEY2"),
secret_key = Sys.getenv("OKX_SECRET_KEY2"),
passphrase = Sys.getenv("OKX_PASSPHRASE2")
)
.fetchers$account_positions_history(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(mgnMode = 'cross', config = config)
.fetchers$account_leverage_info
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(mgnMode = 'cross', config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
config <- list(
api_key = Sys.getenv("OKX_API_KEY2"),
secret_key = Sys.getenv("OKX_SECRET_KEY2"),
passphrase = Sys.getenv("OKX_PASSPHRASE2")
)
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
config <- XAgent::tool_set_config("okx")
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
config <- list(
api_key = Sys.getenv("OKX_API_KEY2"),
secret_key = Sys.getenv("OKX_SECRET_KEY2"),
passphrase = Sys.getenv("OKX_PASSPHRASE2")
)
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_fetch_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$asset_deposit_history(config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_positions_history(config = config)
.execute_post_action
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_post_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.fetchers$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_post_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
.gets$asset_balances(config = config)
.gets$asset_deposit_history(config = config)
.gets$asset_withdrawal_history(config = config)
.gets$account_balance(config = config)
.gets$account_positions(config = config)
.gets$account_positions_history(config = config)
.gets$account_leverage_info(inst_id = "ETH-USDT-SWAP", mgnMode = 'cross', config = config)
.gets$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
.gets$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
.gets$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
df <- .gets$market_candles(inst_id = "ETH-USDT-SWAP", bar="1m", limit=10L, config = config)
get_var_label(df)
df <- .gets$market_history_candles(inst_id = "ETH-USDT-SWAP", bar="4H", limit=10L, before = "2025-07-01 00:00:00", tz = "Asia/Hong_Kong", config = config)
get_var_label(df)
df <- .gets$public_mark_price(inst_id = "ETH-USDT-SWAP", config = config)
get_var_label(df)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_post_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
config <- XAgent::tool_set_config("okx")
order <- list(
instId = "ETH-USDT-SWAP",
tdMode = "cross",
clOrdId = paste0("r", format(Sys.time(), "%Y%m%d%H%M%S"), sample(1000:9999, 1)),
side = "buy",
posSide = "long",
ordType = "limit",
sz = "0.01",
px = "1700"
)
.posts$trade_order(order, tz = "Asia/Hong_Kong", config = config)
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_post_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
order <- list(
instId = "ETH-USDT-SWAP",
tdMode = "cross",
clOrdId = paste0("r", format(Sys.time(), "%Y%m%d%H%M%S"), sample(1000:9999, 1)),
side = "buy",
posSide = "long",
ordType = "limit",
sz = "0.01",
px = "1700"
)
df <- .posts$trade_order(order, tz = "Asia/Hong_Kong", config = config)
df$ordId
.posts$trade_cancel_order
order <- list(
instId = "ETH-USDT-SWAP",
ordId = df$ordId
)
df2 <- .posts$trade_cancel_order(order, tz = "Asia/Hong_Kong", config = config)
df2
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/constants.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_headers.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_request.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_execute.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_parser.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_get_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_post_generator.R")
source("~/Documents/2025/_2025-07-06_okxr/okxr/R/utils_labels.R")
order <- list(
instId = "ETH-USDT-SWAP",
tdMode = "cross",
clOrdId = paste0("r", format(Sys.time(), "%Y%m%d%H%M%S"), sample(1000:9999, 1)),
side = "buy",
posSide = "long",
ordType = "limit",
sz = "0.01",
px = "1700"
)
df <- .posts$trade_order(order, tz = "Asia/Hong_Kong", config = config)
.gets$trade_order(tz = "Asia/Hong_Kong", config = config)
.gets$trade_order(instId = "ETH-USDT-SWAP", ordId = df$ordId, tz = "Asia/Hong_Kong", config = config)
order <- list(
instId = "ETH-USDT-SWAP",
ordId = df$ordId
)
df2 <- .posts$trade_cancel_order(order, tz = "Asia/Hong_Kong", config = config)
.gets$trade_order(instId = "ETH-USDT-SWAP", ordId = df$ordId, tz = "Asia/Hong_Kong", config = config)
df
devtools::document('/Users/oliver/Documents/2025/_2025-07-06_okxr/okxr')
setwd("/Users/oliver/Documents/2025/_2025-07-06_okxr/okxr")
devtools::document()
list.files(".", recursive = FALSE)
list.files("R", recursive = TRUE)
file.remove("DESCRIPTION.rtf", "NAMESPACE.rtf")
writeLines(c(
"Package: okxr",
"Title: OKX API Wrapper for R",
"Version: 0.1.0",
"Authors@R: person('Oliver', 'Lee', email = 'you@email.com', role = c('aut', 'cre'))",
"Description: A lightweight wrapper around the OKX REST API for market, trade, account, and asset endpoints.",
"License: MIT",
"Encoding: UTF-8",
"LazyData: true",
"Imports:",
"    httr,",
"    jsonlite,",
"    digest,",
"    base64enc"
), "DESCRIPTION")
devtools::document()
devtools::document()
rm(list = c("get_var_label"))
